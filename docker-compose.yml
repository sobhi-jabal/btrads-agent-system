version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: btrads-postgres
    environment:
      POSTGRES_DB: btrads_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: btrads-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: btrads-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=10m
      - OLLAMA_NUM_PARALLEL=1  # Sequential processing only
    command: serve
    healthcheck:
      test: ["CMD-SHELL", "ollama list || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: btrads-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/btrads_db
      REDIS_URL: redis://redis:6379
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_MODEL: phi4:14b
      OLLAMA_TIMEOUT: 120  # 2 minutes for phi4
      SECRET_KEY: your-secret-key-here-change-in-production
      PYTHONUNBUFFERED: 1
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend UI
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: btrads-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8001
      NEXT_PUBLIC_WS_URL: ws://localhost:8001/ws
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Model Downloader (runs once to download models)
  model-downloader:
    image: ollama/ollama:latest
    container_name: btrads-model-downloader
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - OLLAMA_HOST=ollama:11434
    command: >
      sh -c "
        echo 'Waiting for Ollama to be ready...';
        sleep 10;
        echo 'Pulling phi4:14b model...';
        ollama pull phi4:14b;
        echo 'Model download complete';
      "
    networks:
      - default
    profiles:
      - setup

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  backend_logs:

networks:
  default:
    name: btrads-network